---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2023/9/28 16:37
---
-- mysql_test.lua
local mysql = require "resty.mysql"
local _M = {}  -- 创建一个模块表
-- 定义连接池的配置
local mysql_config = {
    host = "192.168.3.191", -- mysql 服务器地址
    port = 3307, -- mysql 服务器端口
    timeout = 1000, -- 连接超时时间（毫秒）
    max_idle_timeout = 60000, -- 连接在连接池中的最大空闲时间（毫秒）
    pool_size = 100, -- 连接池大小
    user = "root",
    password = "rck123##2020fstest",
    database = "talentcard-apicomponent"
}
-- 创建数据库连接池
function _M.new()
    local db, err = mysql:new()
    if not db then
        ngx.log(ngx.ERR, "failed to create mysql object: ", err)
        return nil, err
    end

    db:set_timeout(mysql_config.timeout)  -- 设置超时时间（以毫秒为单位）

    local ok, err, errno, sqlstate = db:connect({
        host = mysql_config.host, -- 数据库主机
        port = mysql_config.port, -- 数据库端口
        database = mysql_config.database, -- 数据库名
        user = mysql_config.user, -- 数据库用户名
        password = mysql_config.password  -- 数据库密码
    })

    if not ok then
        ngx.log(ngx.ERR, "failed to connect to database: ", err, ": ", errno, " ", sqlstate)
        return nil, err
    end

    return db, nil  -- 返回数据库连接对象
end

-- 执行查询操作
function _M.query(db, sql)
    local res, err, errno, sqlstate = db:query(sql)
    if not res then
        ngx.log(ngx.ERR, "bad result: ", err, ": ", errno, ": ", sqlstate, ".")
        return nil, err
    end

    return res, nil  -- 返回查询结果
end

-- 释放连接
function _M.close(db)
    if not db then
        return
    end

    local ok, err = db:set_keepalive(mysql_config.max_idle_timeout, mysql_config.pool_size)  -- 连接在连接池中最多保持 100 秒

    if not ok then
        ngx.log(ngx.ERR, "failed to set keepalive: ", err)
    end
end

return _M  -- 返回模块表
