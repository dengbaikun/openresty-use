---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2023/9/28 16:37
---
-- 连接redis
local redis = require('resty.redis')
local _M = {}  -- 创建一个模块表
-- 定义连接池的配置
local redis_config = {
    host = "192.168.3.253", -- Redis 服务器地址
    port = 6379, -- Redis 服务器端口
    timeout = 5000, -- 连接超时时间（毫秒）
    max_idle_timeout = 60000, -- 连接在连接池中的最大空闲时间（毫秒）
    pool_size = 100, -- 连接池大小
    password = "95279527"
}
-- 创建数据库连接池
function _M.new()
    local red = redis:new()
    red:set_timeout(redis_config.timeout)  -- 设置超时时间（以毫秒为单位）

    local ok, err = red:connect(redis_config.host, -- 数据库主机
            redis_config.port -- 数据库端口
    )

    if not ok then
        ngx.log(ngx.ERR, "failed to connect to Redis: ", err)
        return nil, err
    end
    local ok, err = red:auth(redis_config.password)
    if not ok then
        ngx.log(ngx.ERR, "Redis auth fail: ", err)
        return nil, err
    end
    return red, nil  -- 返回 Redis 连接对象
end
-- 执行 Redis 命令
function _M.command(red, cmd, ...)
    local res, err = red[cmd](red, ...)
    if not res then
        ngx.log(ngx.ERR, "failed to execute Redis command: ", err)
        return nil, err
    end

    return res, nil  -- 返回命令执行结果
end

-- 释放连接
function _M.close(red)
    if not red then
        return
    end

    --释放连接(连接池实现)
    local ok, err = red:set_keepalive(redis_config.max_idle_timeout, redis_config.pool_size) -- 连接在连接池中最多保持 100 秒
    if not ok then
        ngx.log(ngx.ERR, "set redis keepalive error : ", err)
    end
end

return _M  -- 返回模块表
