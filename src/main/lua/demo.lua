---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2023/2/7 13:46
---
local cjson = require "cjson"
local demo = {

}

local function command(command, opts)
end

demo.commands = {
    -- commands operating on the key space
    get = function(cmd,...)
        parameters = {...}
        print( "get " .. cjson.encode(parameters))
    end,
    set = function(cmd, ...)
        parameters = {...}
        print("set " .. cjson.encode(parameters))
    end,
}
function demo.error(message, level)
    error(message, (level or 1) + 1)
end

function demo.connect()
    local commands = demo.commands or {}
    if type(commands) ~= 'table' then
        demo.error('invalid type for the commands table')
    end
    local client = {}
    for cmd, fn in pairs(commands) do
        if type(fn) ~= 'function' then
            redis.error('invalid type for command ' .. cmd .. '(must be a function)')
        end
        client[cmd] = fn
    end
    return client
end

function demo.test()
    return "hello world"
end

return demo