---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2023/9/26 16:44
---
---
-- 定义连接池的配置
local redis_config = {
    host = "192.168.3.9",   -- Redis 服务器地址
    port = 6767,          -- Redis 服务器端口
    timeout = 1000,       -- 连接超时时间（毫秒）
    max_idle_timeout = 60000, -- 连接在连接池中的最大空闲时间（毫秒）
    pool_size = 100,       -- 连接池大小
    password = "rck!1491"
}

local function close_redis(red)
    if not red then
        return
    end
    --释放连接(连接池实现)
    local ok, err = red:set_keepalive(redis_config.max_idle_timeout, redis_config.pool_size)
    if not ok then
        ngx.log(ngx.ERR, "set redis keepalive error : ", err)
    end
end
-- 连接redis
local redis = require('resty.redis')
local red = redis.new()
red:set_timeout(redis_config.timeout)
--设置服务器链接密码
local ok, err = red:connect(redis_config.host,redis_config.port)
if not ok then
    ngx.log(ngx.ERR, "get redis connect error : ", err)
    return close_redis(red)
end
red:auth(redis_config.password)
resp = red:set('funet', '888888')
resp = red:get('funet')
ngx.log(ngx.ERR, "resp : ", resp)
local clientIP = ngx.req.get_headers()["X-Real-IP"]
if clientIP == nil then
    clientIP = ngx.req.get_headers()["x_forwarded_for"]
end if clientIP == nil then
    clientIP = ngx.var.remote_addr
end
--ngx.say(clientIP)
--if clientIP == "101.231.137.70" then
-- ngx.exit(ngx.HTTP_FORBIDDEN)
-- return close_redis(red)
-- end
local incrKey = "user:"..clientIP..":freq"
local blockKey = "user:"..clientIP..":block"
local is_block,err = red:get(blockKey) -- check if ip is blocked
--ngx.say(tonumber(is_block))
if tonumber(is_block) == 1 then
    --ngx.say(3)
    ngx.exit(403)
    --ngx.exit(ngx.HTTP_FORBIDDEN)
    close_redis(red)
end
inc  = red:incr(incrKey)
ngx.say(inc)
ngx.log(ngx.ERR, "inc : ", inc)
if inc < 2 then
    inc = red:expire(incrKey,1)
end
if inc > 2 then --每秒2次以上访问即视为非法，会阻止1分钟的访问
    red:set(blockKey,1) --设置block 为 True 为1
    red:expire(blockKey,60)
end
close_redis(red)