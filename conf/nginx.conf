#user nginx nginx;
worker_processes auto; #设置值和CPU核心数一致
#error_log /usr/local/nginx/logs/nginx_error.log crit; #日志位置和日志级别
#pid /usr/local/nginx/nginx.pid;
#Specifies the value for maximum file descriptors that can be opened by this process.
worker_rlimit_nofile 65535;
events
{
  worker_connections 65535;
}
http
{
  include mime.types;
  default_type application/octet-stream;
  log_format main  '$remote_addr - $remote_user [$time_local] "$request" '
               '$status $body_bytes_sent "$http_referer" '
               '"$http_user_agent" $http_x_forwarded_for';

  charset UTF-8;

  server_names_hash_bucket_size 128;
  client_header_buffer_size 32k;
  large_client_header_buffers 4 32k;
  client_max_body_size 8m;

  sendfile on;
  tcp_nopush on;
  keepalive_timeout 60;
  tcp_nodelay on;
  fastcgi_connect_timeout 300;
  fastcgi_send_timeout 300;
  fastcgi_read_timeout 300;
  fastcgi_buffer_size 64k;
  fastcgi_buffers 4 64k;
  fastcgi_busy_buffers_size 128k;
  fastcgi_temp_file_write_size 128k;
  gzip on;
  gzip_min_length 1k;
  gzip_buffers 4 16k;
  gzip_http_version 1.0;
  gzip_comp_level 2;
  gzip_types text/plain application/x-javascript text/css application/xml;
  gzip_vary on;
     #脚本位置
    lua_package_path "test/ngx_lua_waf/?.lua;;test/?.lua;;";
     lua_shared_dict limit 10m;
     init_by_lua_file  test/ngx_lua_waf/init.lua;

      server {
          listen       7777;
          server_name  localhost;
          default_type text/html;
          location = /favicon.ico {
              log_not_found off;
              access_log off;
          }

          location /jwt {
            rewrite ^/test(.*)$ /$1 break;
            rewrite_by_lua_file test/access.lua;
            proxy_pass http://127.0.0.1:8080;
           # index index.html index.htm;
           #content_by_lua_file test/test.lua;
          }

          location /hello {
          access_by_lua_file test/ngx_lua_waf/waf.lua;
               default_type 'text/plain';
               content_by_lua 'ngx.say("hello, lua")';
          }

           location /123 {
          access_by_lua_file test/ngx_lua_waf/waf.lua;
               default_type 'text/plain';
               content_by_lua 'ngx.say("hello, lua")';
          }
          location /test {
               default_type 'text/plain';
               content_by_lua_file test/test.lua;
          }


           location /pic/ {
                rewrite ^/pic/(.*)$ /$1 break;
                rewrite_by_lua_file test/access_pic.lua;
                root D:/app/pic/;
                index  index.html;
           }

          location /say {
               default_type 'text/plain';
               content_by_lua_file test/say_json.lua;
          }

           location /say_request {
             	access_by_lua_file test/ngx_lua_waf/waf.lua;
                default_type 'text/plain';
                content_by_lua_file test/say_request.lua;
            }


           location /mysql_test {
                  default_type 'text/plain';
                  content_by_lua_file test/mysql_test.lua;
           }

           location /proxy {
               default_type 'text/plain';
               rewrite ^/proxy(.*)$ $1 break;
               # 默认读取 body
               lua_need_request_body on;
               #对数据解密处理
               access_by_lua_file test/decrypt_access.lua;
               proxy_pass http://127.0.0.1:8080;
               #对数据加密处理
               body_filter_by_lua_file test/encrypt_body_filter.lua;
           }

           location /testencrypt {
               proxy_pass http://127.0.0.1:8080;
           }
      }

      #黑名单
      #include blockip.conf;

}
