   server {
        listen 80;
        server_name dengbaikun.com *.dengbaikun.com;  # 或你的具体域名，如 example.com
        # 重定向所有 HTTP 请求到 HTTPS
        return 301 https://$host$request_uri;
    }
    # 以下属性中以ssl开头的属性代表与证书配置有关，其他属性请根据自己的需要进行配置。
    server {
        listen 443 ssl;   #SSL协议访问端口号为443。此处如未添加ssl，可能会造成Nginx无法启动。
        server_name dengbaikun.com *.dengbaikun.com;  #将localhost修改为您证书绑定的域名，例如：www.example.com。
        access_log logs/dengbaikun.com.access.log;
        error_log  logs/dengbaikun.com.error.log;
        ssl_certificate /etc/letsencrypt/live/dengbaikun.com/cert.pem;   #将domain name.pem替换成您证书的文件名。
        ssl_certificate_key /etc/letsencrypt/live/dengbaikun.com/privkey.pem;   #将domain name.key替换成您证书的密钥文件名。
        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;  #使用此加密套件。
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;   #使用该协议进行配置。
        ssl_prefer_server_ciphers on;
        charset utf-8;
        location /favicon.ico {
             alias /opt/openresty/nginx/html/favicon.ico;
             header_filter_by_lua_block {
                  local server_header = require "server_header"
                  ngx.header["Server"] = server_header.random_server_header();
             }
        }
        location / {
             #root   html;
             #index  index.html index.htm;
            default_type 'text/html';
            content_by_lua_block {
                local say_msg = require "say_msg_redis"
                say_msg.print();
            }
            header_filter_by_lua_block {
                local server_header = require "server_header"
                ngx.header["Server"] = server_header.random_server_header();
            }
        }
    }